educ3 <- study2[study2$educ==3,]
lm8 <- lm(incom ~ age, data = educ1)
summary(lm8)
lm9 <- lm(incom ~ age, data = educ2)
summary(lm9) # marg sig agequad
lm10 <- lm(incom ~ age, data = educ3)
summary(lm10) # sig lin, marg sig agequad
contrasts(study2$educ) = cbind(lin = c(-1, 0, 1), quad = c(-1, 2, -1))
contrasts(study2$age) = cbind(lin = c(-1, 0, 1), quad = c(-1, 2, -1))
library(ggplot2)
study2 <- read.csv("http://www.stanford.edu/class/psych252/data/couples1.csv")
head(study2)
study2$age <- as.factor(study2$age)
study2$educ <- as.factor(study2$educ)
study2$train <- as.factor(study2$train)
study2$counsel <- as.factor(study2$counsel)
study2$counrep <- as.factor(study2$counrep)
summary(study2)
str(study2)
contrasts(study2$educ) = cbind(lin = c(-1, 0, 1), quad = c(-1, 2, -1))
contrasts(study2$age) = cbind(lin = c(-1, 0, 1), quad = c(-1, 2, -1))
lm7 <- lm(incom ~ age * educ, data = study2)
summary(lm7)
lm8 <- lm(incom ~ age, data = educ1)
summary(lm8)
educ1 <- study2[study2$educ==1,]
educ2 <- study2[study2$educ==2,]
educ3 <- study2[study2$educ==3,]
lm8 <- lm(incom ~ age, data = educ1)
summary(lm8)
p6 <- with(study2, interaction.plot(train, educ, quality))
p6_1 <- with(study2, interaction.plot(train, age, quality))
with(study2, interaction.plot(age, educ, incom))
with(study2, interaction.plot(educ, age, incom))
head(educ1)
head(educ2)
summary(educ1)
contrasts(study2$age) = cbind(lin = c(-2, 1, 1), quad = c(0, -1, 1))
lm8 <- lm(incom ~ age, data = educ1)
summary(lm8)
contrasts(study2$age) = cbind(lin = c(-1, 0, 1), quad = c(-1, 2, -1))
lm8 <- lm(incom ~ age, data = educ1)
summary(lm8)
contrasts(educ1$age) = cbind(lin = c(-1, 0, 1), quad = c(-1, 2, -1))
lm8 <- lm(incom ~ age, data = educ1)
summary(lm8)
contrasts(educ1$age) = cbind(lin = c(-2, 1, 1), quad = c(0, -1, 1))
lm8 <- lm(incom ~ age, data = educ1)
summary(lm8)
plot(income ~ age, educ1)
plot(incom ~ age, educ1)
plot(incom ~ age, educ2)
plot(incom ~ age, educ3)
contrasts(educ1$age) = cbind(lin = c(-1, 0, 1), quad = c(1, -2, 1))
lm8 <- lm(incom ~ age, data = educ1)
summary(lm8)
plot(incom ~ age, educ1)
plot(incom ~ age, educ2)
plot(incom ~ age, educ3)
contrasts(educ2$age) = cbind(lin = c(-1, 0, 1), quad = c(1, -2, 1))
lm9 <- lm(incom ~ age, data = educ2)
summary(lm9)
contrasts(educ3$age) = cbind(lin = c(-2, 1, 1), quad = c(0, -1, 1))
lm10_1 <- lm(incom ~ age, data = educ3)
summary(lm10_1)
contrasts(educ3$age) = cbind(lin = c(-1, 0, 1), quad = c(1, -2, 1))
lm10 <- lm(incom ~ age, data = educ3)
summary(lm10)
contrasts(educ3$age) = cbind(lin = c(-2, 1, 1), quad = c(0, -1, 1))
lm10_1 <- lm(incom ~ age, data = educ3)
summary(lm10_1)
contrasts(educ3$age) = cbind(first_vs_secthird = c(-2, 1, 1), sec_vs_third = c(0, -1, 1))
lm10_1 <- lm(incom ~ age, data = educ3)
summary(lm10_1)
contrasts(educ1$age) = cbind(lin = c(-1, 0, 1), quad = c(1, -2, 1))
lm8 <- lm(incom ~ age, data = educ1)
summary(lm8)
lm9 <- lm(incom ~ age, data = educ2)
summary(lm9)
contrasts(educ2$age) = cbind(lin = c(-1, 0, 1), quad = c(1, -2, 1))
lm9 <- lm(incom ~ age, data = educ2)
summary(lm9)
contrasts(educ3$age) = cbind(lin = c(-1, 0, 1), quad = c(1, -2, 1))
lm10 <- lm(incom ~ age, data = educ3)
summary(lm10)
contrasts(educ3$age) = cbind(first_vs_secthird = c(-2, 1, 1), sec_vs_third = c(0, -1, 1))
lm10_1 <- lm(incom ~ age, data = educ3)
summary(lm10_1)
age1 <- study2[study2$age==1,]
age2 <- study2[study2$age==2,]
age3 <- study2[study2$age==3,]
plot(incom ~ educ, age1)
plot(incom ~ educ, age2)
plot(incom ~ educ, age3)
contrasts(age1$educ) = cbind(lin = c(-1, 0, 1), quad = c(1, -2, 1))
lm11 <- lm(incom ~ educ, data = age1)
summary(lm11)
contrasts(age1$educ) = cbind(lin = c(-1, -1, 2), quad = c(1, -1, 0))
lm11 <- lm(incom ~ educ, data = age1)
summary(lm11)
contrasts(age2$educ) = cbind(lin = c(-1, 0, 1), quad = c(1, -2, 1))
lm12 <- lm(incom ~ educ, data = age2)
summary(lm12)
contrasts(age3$educ) = cbind(lin = c(-1, 0, 1), quad = c(1, -2, 1))
lm13 <- lm(incom ~ educ, data = age3)
summary(lm13)
contrasts(age1$educ) = cbind(lin = c(-1, 0, 1), quad = c(1, -2, 1))
lm11 <- lm(incom ~ educ, data = age1)
summary(lm11) # ns
summary(lm12) # sig lin
summary(lm13) # marg sig lin
with(study2, cor.test(quality, incom))
aov_sex <- with(study1, aov(vocabsize ~ time0 * sex))
study1 <- read.csv("http://www.stanford.edu/class/psych252/data/vocab0.csv")
# make sex a factor, rename the levels
study1$sex <- as.factor(study1$sex)
levels(study1$sex) <- c("male", "female")
# make time a factor
study1$time0 <- as.factor(study1$time0)
levels(study1$time0) <- c("18m", "21m", "24m", "30m")
#rename var vocabsize to make it easier to remember for me
study1$vocabsize <- study1$wordsprod
```
Create plots:
```{r 1plot1}
library(ggplot2)
# interaction plot:
with(study1, interaction.plot(time0, sex, vocabsize))
aov_sex <- with(study1, aov(vocabsize ~ time0 * sex))
summary(aov_sex)
p6 <- with(study2, interaction.plot(train, educ, quality))
library(ggplot2)
study2 <- read.csv("http://www.stanford.edu/class/psych252/data/couples1.csv")
head(study2)
study2$age <- as.factor(study2$age)
study2$educ <- as.factor(study2$educ)
study2$train <- as.factor(study2$train)
study2$counsel <- as.factor(study2$counsel)
study2$counrep <- as.factor(study2$counrep)
summary(study2)
str(study2)
p5 <- ggplot(study2, aes(train, quality))
p5 + geom_boxplot(aes(fill = educ))
p6 <- with(study2, interaction.plot(train, educ, quality))
head(study1)
contrasts(study1$time0) = dummy
contrasts(study1$time0) = dummy
1
dummy = cbind(c(0, 1, 0, 0), c(0, 0, 1, 0), c(0, 0, 0, 1))
lm2_1 = lm(vocabsize ~ time0 * sex, data = study1) # interactive
summary(lm2_1)
lm_1 = lm(vocabsize ~ time0 + sex, data = study1) # additive
summary(lm_1)
anova(lm_1, lm2_1)
anova(lm, lm_1)
accel = c(-1, -1, 1, 1) # test whether time1 and 2 are different from time3 and 4
accel12 = c(-1, 1, 0, 0) # test whether time1 and 2 are different from each other
accel34 = c(0, 0, -1, 1) # test whether time3 and 4 are different from each other
lm = lm(vocabsize ~ time0 + sex, data = study1) # additive
summary(lm)
anova(lm, lm_1)
bartlett.test(vocabsize ~ time0, data = study1)
bartlett.test(vocabsize ~ sex, data = study1)
aov_sex0 <- with(study1, oneway.test(vocabsize ~ sex, var.equal = TRUE))
summary(aov_sex)
summary(aov_sex0)
with(study2, interaction.plot(counsel, age, quality))
with(study2, interaction.plot(counsel, educ, quality))
aov2 <- with(study2, aov(quality ~ counsel * age * educ))
summary(aov2)
aov3 <- with(study2, aov(quality ~ educ))
summary(aov3)
bartlett.test(quality ~ counsel * age, data = study2)
bartlett.test(quality ~ train * age * educ, data = study2)
with(study1, coplot(vocabsize ~ time0 | sex))
with(study2, coplot(incom ~ quality | age))
with(study2, coplot(incom ~ quality | educ))
with(study2, interaction.plot(age, educ, incom))
with(study2, interaction.plot(educ, age, incom))
p12 <- ggplot(study2, aes(x = quality, y = incom, group = educ, colour = educ))
p12 + geom_point() + geom_smooth(method = "lm", se = FALSE)
p13 <- ggplot(study2, aes(x=quality, y=incom))
p13 + geom_point() + geom_smooth(method = "lm", se = FALSE)
library(psych)
partial.r(study2, quality, income)
dataC = read.csv("http://www.stanford.edu/class/psych252/_downloads/lifesatis.csv")
head(dataC)
with(study1, interaction.plot(time0, sex, vocabsize))
study2_0 <- read.table("http://www.stanford.edu/class/psych252/data/couples5.txt")
View(study2_0)
View(study2)
rm(list = ls())
setwd("/Users/ericang/Documents/Erica/Stanford/2013-Q2-Winter/Research/simpimpGIT/Data_analysis/")
source("R_scripts/useful.R")
source("R_scripts/et_helper.R")
raw.data.path <- "raw_data/"
info.path <- "info/"
processed.data.path <- "processed_data/"
## LOOP TO READ IN FILES
all.data <- data.frame()
files <- dir(raw.data.path,pattern="*.txt")
for (file.name in files) {
print(file.name)
## these are the two functions that are most meaningful
d <- read.smi.idf(paste(raw.data.path,file.name,sep=""),header.rows=35)
d <- preprocess.data(d)
d$subid <- file.name
## now here's where data get bound together
all.data <- rbind(all.data, d)
}
## WRITE DATA OUT TO CSV FOR EASY ACCESS
write.csv(all.data,paste(processed.data.path,
"simpimp_processed.csv",sep=""),
row.names=FALSE)
d <- read.csv("/Users/ericang/Documents/Erica/Stanford/2013-Q2-Winter/Research/simpimpGIT/Data_analysis/processed_data/simpimp_processed.csv")
head(d)
hist(d$x)
hist(d$y)
hist(d$x)
qplot(x,
facets = ~ subid,
geom="histogram",
data=d)
## LOOP TO READ IN FILES
all.data <- data.frame()
files <- dir(raw.data.path,pattern="*.txt")
for (file.name in files) {
print(file.name)
## these are the two functions that are most meaningful
d <- read.smi.idf(paste(raw.data.path,file.name,sep=""),header.rows=35)
d <- preprocess.data(d)
d$subid <- file.name
## now here's where data get bound together
all.data <- rbind(all.data, d)
}
## WRITE DATA OUT TO CSV FOR EASY ACCESS
write.csv(all.data,paste(processed.data.path,
"simpimp_processed.csv",sep=""),
row.names=FALSE)
d <- read.csv("/Users/ericang/Documents/Erica/Stanford/2013-Q2-Winter/Research/simpimpGIT/Data_analysis/processed_data/simpimp_processed.csv")
head(d)
hist(d$x)
hist(d$y)
qplot(x,
facets = ~ subid,
geom="histogram",
data=d)
qplot(y,
facets = ~ subid,
geom="histogram",
data=d)
d <- subset(d,(y!= "1050" & x!="0"))
qplot(x,
facets = ~ subid,
geom="histogram",
data=d)
qplot(y,
facets = ~ subid,
geom="histogram",
data=d)
qplot(x,y,data=d, facets=~subid)
qplot(x,y,geom="density2d",
data=d,
xlim=c(0,1680),ylim=c(0,1050), facets=~subid)
qplot(x,y,geom="density2d",
data=d,
xlim=c(0,1680),ylim=c(0,1050), facets=~subid)
# how many NAs are there in the dataset?
sum(is.na(d$x))
# how about for each participant?
# HINT: use na.action="na.pass" to pass NAs through aggregate
aggregate(x ~ subid, d, function(y) {return(sum(is.na(y)))},
na.action="na.pass")
order <- read.csv("/Users/ericang/Documents/Erica/Stanford/2013-Q2-Winter/Research/simpimpGIT/Data_analysis/info/simpkid_order.csv")
head(order)
nrow(d) # first check number of rows
plot(d$stimulus) # now check the stimulus ordering
# now join in the orders
d <- join(d, order) # use join rather than merge because it doesn't sort
plot(d$stimulus) # check that nothing got messed up
nrow(d) # check the number of rows again
rois <- list()
rois[[1]] <- c(0,300,840,550) # left
rois[[2]] <- c(840,300,840,550) # right
names(rois) <- c("L","R")
roi.image(rois)
# use check code to make sure that ROIs look right
d$roi <- roi.check(d,rois)
# see how the distribution of ROIs looks
qplot(roi,data=d)
# set up correctness
d$correct <- d$roi == d$targetPos
# another way to organize by ROI's: set up three possible regions
d$target <- ifelse(d$roi == d$targetPos, "1", "0")
d$dist <- ifelse(d$roi == d$distPos, "1", "0")
# remove those rows where column 'correct' is NA
d <- subset(d,correct != "NA")
#check what we're left with
plot(d$stimulus)
nrow(d)
qplot(roi,data=d)
d <- rezero.trials(d) # specified in et_helper.R
subsample.hz <- 5 # 10 hz is decent, eventually we should set to 30 or 60 hz
d$t.crit.binned <- round(d$t.crit*subsample.hz)/subsample.hz # subsample step
## 1a. overall
ms <- aggregate(correct ~ t.crit.binned + trialType, d, mean)
qplot(t.crit.binned,correct,
colour=trialType,
geom="line",
data=ms) +
geom_hline(yintercept=.50,lty=4) +
geom_vline(xintercept=0,lty=3) +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-4,4),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
## 1aa. overall: just inference vs. control distinction
ms <- aggregate(correct ~ t.crit.binned + trialType2, d, mean)
qplot(t.crit.binned,correct,
colour=trialType2,
geom="line",
data=ms) +
geom_hline(yintercept=.50,lty=4) +
geom_vline(xintercept=0,lty=3) +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-4,4),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
## 1a+ add error bars with 95% CI
mss <- aggregate(correct ~ t.crit.binned + trialType2 + subid, d, mean)
ms <- aggregate(correct ~ t.crit.binned + trialType2, mss, mean)
ms$cih <- aggregate(correct ~ t.crit.binned + trialType2, mss, ci.high)$correct
ms$cil <- aggregate(correct ~ t.crit.binned + trialType2, mss, ci.low)$correct
qplot(t.crit.binned,correct,
colour=trialType2,
geom="line",
data=ms) +
geom_pointrange(aes(ymin=correct-cil, ymax=correct+cih),
position=position_dodge(.05)) +
geom_hline(yintercept=.50,lty=4) +
geom_vline(xintercept=0,lty=3) +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-4,3),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
## loess
ms <- aggregate(correct ~ t.crit.binned + trialType, d, mean)
qplot(t.crit.binned,correct,
colour=trialType,
geom="point",
data=ms) +
geom_hline(yintercept=.50,lty=4) +
geom_vline(xintercept=0,lty=3) +
geom_smooth(method="loess",span=.5) +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-2,4),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0))
## gaze at target vs. distractor
subsample.hz <- 5 # 10 hz is decent, eventually we should set to 30 or 60 hz
d$t.crit.binned <- round(d$t.crit*subsample.hz)/subsample.hz # subsample step
melted = melt(d, id=c("t.crit.binned", "trialType2"),
measure=c("target", "dist"),
value.name="Looks", variable.name="Region")
melted$Looks = to.n(melted$Looks)
ms <- aggregate(Looks ~ Region + t.crit.binned + trialType2, melted, mean)
qplot(t.crit.binned, Looks,
colour=trialType2,
linetype=Region,
geom="line",
data=ms) +
geom_hline(yintercept=.5,lty=4) +
geom_vline(xintercept=0,lty=3) +
xlab("Time (s)") + ylab("Proportion Looking") +
scale_x_continuous(limits=c(-4,3),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
## 1e. target positions
ms <- aggregate(correct ~ t.crit.binned + trialType + targetPos, d, mean)
qplot(t.crit.binned,correct,
colour=trialType,
geom="point",
data=ms) +
facet_grid(.~ targetPos) +
geom_hline(yintercept=.5,lty=4) +
geom_vline(xintercept=0,lty=3) +
geom_smooth() +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-3,3),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
## 1b. by participant
ms <- aggregate(correct ~ t.crit.binned + trialType + subid, d, mean)
qplot(t.crit.binned,correct,
colour=trialType,
geom="point",
data=ms) +
facet_wrap(~ subid) +
geom_hline(yintercept=.5,lty=4) +
geom_vline(xintercept=0,lty=3) +
geom_smooth() +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-4,5),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
## by gaze location: traget vs. distractor
subsample.hz <- 5 # 10 hz is decent, eventually we should set to 30 or 60 hz
d$t.crit.binned <- round(d$t.crit*subsample.hz)/subsample.hz # subsample step
melted = melt(d, id=c("t.crit.binned", "trialType2", "subid"),
measure=c("target", "dist"),
value.name="Looks", variable.name="Region")
melted$Looks = to.n(melted$Looks)
ms <- aggregate(Looks ~ Region + t.crit.binned + trialType2 + subid, melted, mean)
qplot(t.crit.binned, Looks,
colour=trialType2,
linetype=Region,
geom="line",
data=ms) +
geom_hline(yintercept=.5,lty=4) +
geom_vline(xintercept=0,lty=3) +
xlab("Time (s)") + ylab("Proportion Looking") +
scale_x_continuous(limits=c(-4,4),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) + # make the axes start at 0
facet_grid(.~subid)
qplot(t.crit.binned, Looks,
colour=trialType2,
linetype=Region,
geom="line",
data=ms) +
geom_hline(yintercept=.5,lty=4) +
geom_vline(xintercept=0,lty=3) +
xlab("Time (s)") + ylab("Proportion Looking") +
scale_x_continuous(limits=c(-4,4),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) + # make the axes start at 0
facet_wrap(~subid)
ms <- aggregate(correct ~ t.crit.binned + trialType + targetItem, d, mean)
qplot(t.crit.binned,correct,
colour=trialType, facets=~targetItem,
geom="line",
data=ms) +
geom_hline(yintercept=.50,lty=2) +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-2,3),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0))
window <- c(.5,4)
mss <- aggregate(correct ~ trialType + subid,
subset(d,t.crit.binned > window[1] & t.crit.binned < window[2]),
mean)
ms <- aggregate(correct ~ trialType, mss, mean)
ms$cih <- aggregate(correct ~ trialType, mss, ci.high)$correct
ms$cil <- aggregate(correct ~ trialType, mss, ci.low)$correct
qplot(trialType,correct,
fill=trialType, stat="identity",
geom="bar",ylim=c(0,1),
data=ms) +
ylab("Proportion correct looking") +
geom_hline(yintercept=.50,lty=4) +
geom_errorbar(aes(ymin=correct-cil,ymax=correct+cih,width=.2))
ms <- aggregate(correct ~ trialType + subid, mss, mean)
ms$cih <- aggregate(correct ~ trialType + subid, mss, ci.high)$correct
ms$cil <- aggregate(correct ~ trialType + subid, mss, ci.low)$correct
qplot(trialType,correct,
fill=trialType, stat="identity",
geom="bar",ylim=c(0,1),
data=ms) +
ylab("Proportion correct looking") +
geom_hline(yintercept=.50,lty=4) +
geom_errorbar(aes(ymin=correct-cil,ymax=correct+cih,width=.2)) +
facet_wrap(~subid)
window <- c(2,4)
mss <- aggregate(correct ~ trialType + subid,
subset(d,t.crit.binned > window[1] & t.crit.binned < window[2]),
mean)
ms <- aggregate(correct ~ trialType, mss, mean)
ms$cih <- aggregate(correct ~ trialType, mss, ci.high)$correct
ms$cil <- aggregate(correct ~ trialType, mss, ci.low)$correct
qplot(trialType,correct,
fill=trialType, stat="identity",
geom="bar",ylim=c(0,1),
data=ms) +
ylab("Proportion correct looking") +
geom_hline(yintercept=.50,lty=4) +
geom_errorbar(aes(ymin=correct-cil,ymax=correct+cih,width=.2))
ms <- aggregate(correct ~ trialType + subid, mss, mean)
ms$cih <- aggregate(correct ~ trialType + subid, mss, ci.high)$correct
ms$cil <- aggregate(correct ~ trialType + subid, mss, ci.low)$correct
qplot(trialType,correct,
fill=trialType, stat="identity",
geom="bar",ylim=c(0,1),
data=ms) +
ylab("Proportion correct looking") +
geom_hline(yintercept=.50,lty=4) +
geom_errorbar(aes(ymin=correct-cil,ymax=correct+cih,width=.2)) +
facet_wrap(~subid)
window <- c(.5,2)
mss <- aggregate(correct ~ trialType + subid,
subset(d,t.crit.binned > window[1] & t.crit.binned < window[2]),
mean)
ms <- aggregate(correct ~ trialType, mss, mean)
ms$cih <- aggregate(correct ~ trialType, mss, ci.high)$correct
ms$cil <- aggregate(correct ~ trialType, mss, ci.low)$correct
qplot(trialType,correct,
fill=trialType, stat="identity",
geom="bar",ylim=c(0,1),
data=ms) +
ylab("Proportion correct looking") +
geom_hline(yintercept=.50,lty=4) +
geom_errorbar(aes(ymin=correct-cil,ymax=correct+cih,width=.2))
ms <- aggregate(correct ~ trialType + subid, mss, mean)
ms$cih <- aggregate(correct ~ trialType + subid, mss, ci.high)$correct
ms$cil <- aggregate(correct ~ trialType + subid, mss, ci.low)$correct
qplot(trialType,correct,
fill=trialType, stat="identity",
geom="bar",ylim=c(0,1),
data=ms) +
ylab("Proportion correct looking") +
geom_hline(yintercept=.50,lty=4) +
geom_errorbar(aes(ymin=correct-cil,ymax=correct+cih,width=.2)) +
facet_wrap(~subid)
