source("R_scripts/useful.R")
source("R_scripts/et_helper.R")
raw.data.path <- "raw_data/"
info.path <- "info/"
processed.data.path <- "processed_data/"
## LOOP TO READ IN FILES
all.data <- data.frame()
files <- dir(raw.data.path,pattern="*.txt")
for (file.name in files) {
print(file.name)
## these are the two functions that are most meaningful
d <- read.smi.idf(paste(raw.data.path,file.name,sep=""),header.rows=35)
d <- preprocess.data(d)
d$subid <- file.name
## now here's where data get bound together
all.data <- rbind(all.data, d)
}
## WRITE DATA OUT TO CSV FOR EASY ACCESS
write.csv(all.data,paste(processed.data.path,
"simpimp_processed.csv",sep=""),
row.names=FALSE)
d <- read.csv("/Users/ericang/Documents/Erica/Stanford/2013-Q2-Winter/Research/simpimpGIT/Data_analysis/processed_data/simpimp_processed.csv")
head(d)
summary(d)
summary(d$subid)
#Libraries
library(reshape)
order <- read.csv("/Users/ericang/Documents/Erica/Stanford/2013-Q2-Winter/Research/simpimpGIT/Data_analysis/info/simpkid_order.csv")
head(order)
nrow(d) # first check number of rows
plot(d$stimulus) # now check the stimulus ordering
# now join in the orders
d <- join(d, order) # use join rather than merge because it doesn't sort
plot(d$stimulus) # check that nothing got messed up
nrow(d) # check the number of rows again to see it remained the same
head(d)
d$x[d$y== "1050" & d$x=="0"] <- NA
d$y[d$y== "1050"] <- NA
head(d)
d$count.na <- is.na(d$x)
head(d)
# remove those rows where column 'targetOnset' is NA (i.e., rows that are not showing test trials)
d <- subset(d,targetOnset != "NA")
head(d)
## TRIAL REJECTION: reject trials that have NAs for over 30% of their samples
trial.nas <- ddply(d,c("subid", "stimulus", "count.na"),"nrow")
trial.nas<- reshape(trial.nas, timevar="count.na", idvar=c("subid", "stimulus"), direction="wide")
names(trial.nas) <- c("subid", "stimulus","false","true")
head(trial.nas)
#calculate the proportion of non-NA's over all
trial.nas$prop <-trial.nas$false / (trial.nas$true + trial.nas$false)
head(trial.nas)
reject.trials <- trial.nas[trial.nas$prop < .7,]
# add a column in data that combines subid and stim (trial)
d$subtrial <- paste(d$subid,"_",d$stimulus,sep="")
# reject trials
reject.trials$subtrial <- paste(reject.trials$subid,"_",reject.trials$stimulus,sep="")
print(reject.trials)
for(i in reject.trials$subtrial) {
d <- d[d$subtrial !=i,]
}
subject.nas <- ddply(d,c("subid", "stimulus"),"nrow")
subject.nas2 <- ddply(subject.nas, "subid", "nrow")
print(subject.nas2)
## reject subjects that have less than 70% of the trials remaining (11 out of 16)
reject.subjects <- subject.nas2[subject.nas2$nrow < 11,]
print(reject.subjects)
for(i in reject.subjects$subid) {
d <- d[d$subid !=i,]
}
hist(d$x)
hist(d$y)
qplot(x,
facets = ~ subid,
geom="histogram",
data=d)
qplot(y,
facets = ~ subid,
geom="histogram",
data=d)
qplot(x,y,data=d, facets=~subid)
qplot(x,y,geom="density2d",
data=d,
xlim=c(0,1680),ylim=c(0,1050), facets=~subid)
rois <- list()
rois[[1]] <- c(0,300,840,550) # left
rois[[2]] <- c(840,300,840,550) # right
names(rois) <- c("L","R")
roi.image(rois)
rois <- list()
rois[[1]] <- c(0,250,840,550) # left
rois[[2]] <- c(840,250,840,550) # right
names(rois) <- c("L","R")
roi.image(rois)
d$roi <- roi.check(d,rois)
qplot(roi,data=d)
LR <- ddply(d,c("subid", "roi", "trialType"),"nrow")
LR<- reshape(LR, timevar="roi", idvar=c("subid", "trialType"), direction="wide")
names(LR) <- c("subid", "trial", "leftLook","rightLook")
#calculate the proportion of non-NA's over all
LR$prop <-LR$leftLook / (LR$leftLook + LR$rightLook)
print(LR)
d$correct <- d$roi == d$targetPos
d$target <- ifelse(d$roi == d$targetPos, "1", "0")
d$dist <- ifelse(d$roi == d$distPos, "1", "0")
d <- rezero.trials(d) # specified in et_helper.R
subsample.hz <- 5 # 10 hz is decent, eventually we should set to 30 or 60 hz
d$t.crit.binned <- round(d$t.crit*subsample.hz)/subsample.hz # subsample step
ms <- aggregate(correct ~ t.crit.binned + trialType, d, mean)
qplot(t.crit.binned,correct,
colour=trialType,
geom="line",
data=ms) +
geom_hline(yintercept=.50,lty=4) +
geom_vline(xintercept=0,lty=3) +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-4,4),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
ms <- aggregate(correct ~ t.crit.binned + trialType2, d, mean)
qplot(t.crit.binned,correct,
colour=trialType2,
geom="line",
data=ms) +
geom_hline(yintercept=.50,lty=4) +
geom_vline(xintercept=0,lty=3) +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-4,4),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
mss <- aggregate(correct ~ t.crit.binned + trialType2 + subid, d, mean)
ms <- aggregate(correct ~ t.crit.binned + trialType2, mss, mean)
ms$cih <- aggregate(correct ~ t.crit.binned + trialType2, mss, ci.high)$correct
ms$cil <- aggregate(correct ~ t.crit.binned + trialType2, mss, ci.low)$correct
qplot(t.crit.binned,correct,
colour=trialType2,
geom="line",
data=ms) +
geom_pointrange(aes(ymin=correct-cil, ymax=correct+cih),
position=position_dodge(.05)) +
geom_hline(yintercept=.50,lty=4) +
geom_vline(xintercept=0,lty=3) +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-4,3),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
ms <- aggregate(correct ~ t.crit.binned + trialType, d, mean)
qplot(t.crit.binned,correct,
colour=trialType,
geom="point",
data=ms) +
geom_hline(yintercept=.50,lty=4) +
geom_vline(xintercept=0,lty=3) +
geom_smooth(method="loess",span=.5) +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-2,4),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0))
subsample.hz <- 5 # 10 hz is decent, eventually we should set to 30 or 60 hz
d$t.crit.binned <- round(d$t.crit*subsample.hz)/subsample.hz # subsample step
melted = melt(d, id=c("t.crit.binned", "trialType2"),
measure=c("target", "dist"),
value.name="Looks", variable.name="Region")
melted$value = to.n(melted$value)
ms <- aggregate(value ~ variable + t.crit.binned + trialType2, melted, mean)
qplot(t.crit.binned, value,
colour=trialType2,
linetype=variable,
geom="line",
data=ms) +
geom_hline(yintercept=.5,lty=4) +
geom_vline(xintercept=0,lty=3) +
xlab("Time (s)") + ylab("Proportion Looking") +
scale_x_continuous(limits=c(-4,3),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
## 1e. target positions
ms <- aggregate(correct ~ t.crit.binned + trialType + targetPos, d, mean)
qplot(t.crit.binned,correct,
colour=trialType,
geom="point",
data=ms) +
facet_grid(.~ targetPos) +
geom_hline(yintercept=.5,lty=4) +
geom_vline(xintercept=0,lty=3) +
geom_smooth() +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-3,3),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
ms <- aggregate(correct ~ t.crit.binned + trialType + subid, d, mean)
qplot(t.crit.binned,correct,
colour=trialType,
geom="point",
data=ms) +
facet_wrap(~ subid) +
geom_hline(yintercept=.5,lty=4) +
geom_vline(xintercept=0,lty=3) +
geom_smooth() +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-4,5),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
ms <- aggregate(correct ~ t.crit.binned + trialType + targetItem, d, mean)
qplot(t.crit.binned,correct,
colour=trialType, facets=~targetItem,
geom="line",
data=ms) +
geom_hline(yintercept=.50,lty=2) +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-2,3),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0))
window <- c(.5,4)
mss <- aggregate(correct ~ trialType + subid,
subset(d,t.crit.binned > window[1] & t.crit.binned < window[2]),
mean)
ms <- aggregate(correct ~ trialType, mss, mean)
ms$cih <- aggregate(correct ~ trialType, mss, ci.high)$correct
ms$cil <- aggregate(correct ~ trialType, mss, ci.low)$correct
qplot(trialType,correct,
fill=trialType, stat="identity",
geom="bar",ylim=c(0,1),
data=ms) +
ylab("Proportion correct looking") +
geom_hline(yintercept=.50,lty=4) +
geom_errorbar(aes(ymin=correct-cil,ymax=correct+cih,width=.2))
ms <- aggregate(correct ~ trialType + subid, mss, mean)
qplot(trialType,correct,
fill=trialType, stat="identity",
geom="bar",ylim=c(0,1),
data=ms) +
ylab("Proportion correct looking") +
geom_hline(yintercept=.50,lty=4) +
facet_wrap(~subid)
window <- c(.5,2)
mss <- aggregate(correct ~ trialType + subid,
subset(d,t.crit.binned > window[1] & t.crit.binned < window[2]),
mean)
ms <- aggregate(correct ~ trialType + subid, mss, mean)
qplot(trialType,correct,
fill=trialType, stat="identity",
geom="bar",ylim=c(0,1),
data=ms) +
ylab("Proportion correct looking") +
geom_hline(yintercept=.50,lty=4) +
facet_wrap(~subid)
order2 <- read.csv("/Users/ericang/Documents/Erica/Stanford/2013-Q2-Winter/Research/simpimpGIT/Data_analysis/simpkid-log.csv")
head(order)
head(order2)
order2 <- read.csv("/Users/ericang/Documents/Erica/Stanford/2013-Q2-Winter/Research/simpimpGIT/Data_analysis/info/simpkid-log.csv")
head(order2)
nrow(d) # first check number of rows
plot(d$stimulus) # now check the stimulus ordering
d <- join(d, order2) # use join rather than merge because it doesn't sort
plot(d$stimulus) # check that nothing got messed up
nrow(d) # check the number of rows again to see it remained the same
head(d)
d <- read.csv("/Users/ericang/Documents/Erica/Stanford/2013-Q2-Winter/Research/simpimpGIT/Data_analysis/processed_data/simpimp_processed.csv")
head(d)
summary(d$subid)
order <- read.csv("/Users/ericang/Documents/Erica/Stanford/2013-Q2-Winter/Research/simpimpGIT/Data_analysis/info/simpkid_order.csv")
head(order)
d <- join(d, order) # use join rather than merge because it doesn't sort
order2 <- read.csv("/Users/ericang/Documents/Erica/Stanford/2013-Q2-Winter/Research/simpimpGIT/Data_analysis/info/simpkid-log.csv")
head(order2)
d <- join(d, order2) # use join rather than merge because it doesn't sort
plot(d$stimulus) # check that nothing got messed up
nrow(d) # check the number of rows again to see it remained the same
head(d)
summary(d)
d <- read.csv("/Users/ericang/Documents/Erica/Stanford/2013-Q2-Winter/Research/simpimpGIT/Data_analysis/processed_data/simpimp_processed.csv")
head(d)
d <- join(d, order) # use join rather than merge because it doesn't sort
head(d)
d <- read.csv("/Users/ericang/Documents/Erica/Stanford/2013-Q2-Winter/Research/simpimpGIT/Data_analysis/processed_data/simpimp_processed.csv")
head(d)
summary(d$subid)
order <- read.csv("/Users/ericang/Documents/Erica/Stanford/2013-Q2-Winter/Research/simpimpGIT/Data_analysis/info/simpkid_order.csv")
head(order)
d <- join(d, order) # use join rather than merge because it doesn't sort
head(d)
order2 <- read.csv("/Users/ericang/Documents/Erica/Stanford/2013-Q2-Winter/Research/simpimpGIT/Data_analysis/info/simpkid-log.csv")
head(order2)
order2 <- read.csv("/Users/ericang/Documents/Erica/Stanford/2013-Q2-Winter/Research/simpimpGIT/Data_analysis/info/simpkid-log.csv")
head(order2)
d <- join(d, order2) # use join rather than merge because it doesn't sort
head(d)
d$x[d$y== "1050" & d$x=="0"] <- NA
d$y[d$y== "1050"] <- NA
head(d)
# make a column that shows whether NA (true) or not (false)
d$count.na <- is.na(d$x)
head(d)
# remove those rows where column 'targetOnset' is NA (i.e., rows that are not showing test trials)
d <- subset(d,targetOnset != "NA")
head(d)
trial.nas <- ddply(d,c("subid", "stimulus", "count.na"),"nrow")
trial.nas<- reshape(trial.nas, timevar="count.na", idvar=c("subid", "stimulus"), direction="wide")
names(trial.nas) <- c("subid", "stimulus","false","true")
head(trial.nas)
#calculate the proportion of non-NA's over all
trial.nas$prop <-trial.nas$false / (trial.nas$true + trial.nas$false)
head(trial.nas)
summary(trial.nas)
reject.trials <- trial.nas[trial.nas$prop < .6,]
d$subtrial <- paste(d$subid,"_",d$stimulus,sep="")
# reject trials
reject.trials$subtrial <- paste(reject.trials$subid,"_",reject.trials$stimulus,sep="")
print(reject.trials)
for(i in reject.trials$subtrial) {
d <- d[d$subtrial !=i,]
}
subject.nas <- ddply(d,c("subid", "stimulus"),"nrow")
subject.nas2 <- ddply(subject.nas, "subid", "nrow")
print(subject.nas2)
## reject subjects that have less than 70% of the trials remaining (11 out of 16)
reject.subjects <- subject.nas2[subject.nas2$nrow < 11,]
print(reject.subjects)
for(i in reject.subjects$subid) {
d <- d[d$subid !=i,]
}
hist(d$x)
hist(d$y)
qplot(x,
facets = ~ subid,
geom="histogram",
data=d)
qplot(y,
facets = ~ subid,
geom="histogram",
data=d)
qplot(x,y,data=d, facets=~subid)
qplot(x,y,geom="density2d",
data=d,
xlim=c(0,1680),ylim=c(0,1050), facets=~subid)
rois <- list()
rois[[1]] <- c(0,250,840,550) # left
rois[[2]] <- c(840,250,840,550) # right
names(rois) <- c("L","R")
roi.image(rois)
d$roi <- roi.check(d,rois)
qplot(roi,data=d)
d$correct <- d$roi == d$targetPos
d$target <- ifelse(d$roi == d$targetPos, "1", "0")
d$dist <- ifelse(d$roi == d$distPos, "1", "0")
d <- rezero.trials(d) # specified in et_helper.R
subsample.hz <- 5 # 10 hz is decent, eventually we should set to 30 or 60 hz
d$t.crit.binned <- round(d$t.crit*subsample.hz)/subsample.hz # subsample step
ms <- aggregate(correct ~ t.crit.binned + trialType, d, mean)
qplot(t.crit.binned,correct,
colour=trialType,
geom="line",
data=ms) +
geom_hline(yintercept=.50,lty=4) +
geom_vline(xintercept=0,lty=3) +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-4,4),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
ms <- aggregate(correct ~ t.crit.binned + trialType2, d, mean)
qplot(t.crit.binned,correct,
colour=trialType2,
geom="line",
data=ms) +
geom_hline(yintercept=.50,lty=4) +
geom_vline(xintercept=0,lty=3) +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-4,4),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
ms <- aggregate(correct ~ t.crit.binned + trialType, d, mean)
qplot(t.crit.binned,correct,
colour=trialType,
geom="point",
data=ms) +
geom_hline(yintercept=.50,lty=4) +
geom_vline(xintercept=0,lty=3) +
geom_smooth(method="loess",span=.5) +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-2,4),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0))
subsample.hz <- 5 # 10 hz is decent, eventually we should set to 30 or 60 hz
d$t.crit.binned <- round(d$t.crit*subsample.hz)/subsample.hz # subsample step
melted = melt(d, id=c("t.crit.binned", "trialType2"),
measure=c("target", "dist"),
value.name="Looks", variable.name="Region")
melted$value = to.n(melted$value)
ms <- aggregate(value ~ variable + t.crit.binned + trialType2, melted, mean)
qplot(t.crit.binned, value,
colour=trialType2,
linetype=variable,
geom="line",
data=ms) +
geom_hline(yintercept=.5,lty=4) +
geom_vline(xintercept=0,lty=3) +
xlab("Time (s)") + ylab("Proportion Looking") +
scale_x_continuous(limits=c(-4,3),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
ms <- aggregate(correct ~ t.crit.binned + trialType + targetPos, d, mean)
qplot(t.crit.binned,correct,
colour=trialType,
geom="point",
data=ms) +
facet_grid(.~ targetPos) +
geom_hline(yintercept=.5,lty=4) +
geom_vline(xintercept=0,lty=3) +
geom_smooth() +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-3,3),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
ms <- aggregate(correct ~ t.crit.binned + trialType + subid, d, mean)
qplot(t.crit.binned,correct,
colour=trialType,
geom="point",
data=ms) +
facet_wrap(~ subid) +
geom_hline(yintercept=.5,lty=4) +
geom_vline(xintercept=0,lty=3) +
geom_smooth() +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-4,5),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
ms <- aggregate(correct ~ t.crit.binned + trialType + age_group, d, mean)
ms <- aggregate(correct ~ t.crit.binned + trialType + age_group, d, mean)
qplot(t.crit.binned,correct,
colour=trialType,
geom="point",
data=ms) +
facet_wrap(~ age_group) +
geom_hline(yintercept=.5,lty=4) +
geom_vline(xintercept=0,lty=3) +
geom_smooth() +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-4,5),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
ms <- aggregate(correct ~ t.crit.binned + trialType + targetItem, d, mean)
qplot(t.crit.binned,correct,
colour=trialType, facets=~targetItem,
geom="line",
data=ms) +
geom_hline(yintercept=.50,lty=2) +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-2,3),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0))
ms <- aggregate(correct ~ t.crit.binned + trialType + age_group, d, mean)
qplot(t.crit.binned,correct,
colour=trialType,
geom="line",
data=ms) +
facet_wrap(~ age_group)
geom_hline(yintercept=.50,lty=4) +
geom_vline(xintercept=0,lty=3) +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-4,4),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
ms <- aggregate(correct ~ t.crit.binned + trialType2 + age_group, d, mean)
qplot(t.crit.binned,correct,
colour=trialType2,
geom="line",
data=ms) +
facet_wrap(~ age_group)
geom_hline(yintercept=.50,lty=4) +
geom_vline(xintercept=0,lty=3) +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-4,4),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
ms <- aggregate(correct ~ t.crit.binned + trialType + targetItem, d, mean)
qplot(t.crit.binned,correct,
colour=trialType, facets=~targetItem,
geom="line",
data=ms) +
geom_hline(yintercept=.50,lty=2) +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-2,3),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0))
window <- c(.5,4)
mss <- aggregate(correct ~ trialType + subid,
subset(d,t.crit.binned > window[1] & t.crit.binned < window[2]),
mean)
ms <- aggregate(correct ~ trialType, mss, mean)
ms$cih <- aggregate(correct ~ trialType, mss, ci.high)$correct
ms$cil <- aggregate(correct ~ trialType, mss, ci.low)$correct
qplot(trialType,correct,
fill=trialType, stat="identity",
geom="bar",ylim=c(0,1),
data=ms) +
ylab("Proportion correct looking") +
geom_hline(yintercept=.50,lty=4) +
geom_errorbar(aes(ymin=correct-cil,ymax=correct+cih,width=.2))
ms <- aggregate(correct ~ trialType + age_group, mss, mean)
qplot(trialType,correct,
fill=trialType, stat="identity",
geom="bar",ylim=c(0,1),
data=ms) +
ylab("Proportion correct looking") +
geom_hline(yintercept=.50,lty=4) +
facet_wrap(~age_group)
window <- c(.5,4)
mss <- aggregate(correct ~ trialType + age_group,
subset(d,t.crit.binned > window[1] & t.crit.binned < window[2]),
mean)
ms <- aggregate(correct ~ trialType, mss, mean)
ms$cih <- aggregate(correct ~ trialType, mss, ci.high)$correct
ms$cil <- aggregate(correct ~ trialType, mss, ci.low)$correct
qplot(trialType,correct,
fill=trialType, stat="identity",
geom="bar",ylim=c(0,1),
data=ms) +
ylab("Proportion correct looking") +
geom_hline(yintercept=.50,lty=4) +
geom_errorbar(aes(ymin=correct-cil,ymax=correct+cih,width=.2))
# by age
ms <- aggregate(correct ~ trialType + age_group, mss, mean)
qplot(trialType,correct,
fill=trialType, stat="identity",
geom="bar",ylim=c(0,1),
data=ms) +
ylab("Proportion correct looking") +
geom_hline(yintercept=.50,lty=4) +
facet_wrap(~age_group)
scale_x_continuous(limits=c(-3,3),expand = c(0,0)) +
