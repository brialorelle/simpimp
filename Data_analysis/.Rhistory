scale_x_continuous(limits=c(-2,3),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
qplot(t.crit.binned,correct,
colour=trialType,
geom="point",
data=ms) +
geom_hline(yintercept=.33,lty=2) +
geom_vline(xintercept=0,lty=3) +
geom_smooth(method="loess",span=.5) +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-2,3),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
subsample.hz <- 5 # 10 hz is decent, eventually we should set to 30 or 60 hz
d$t.crit.binned <- round(d$t.crit*subsample.hz)/subsample.hz # subsample step
################ ANALYSES #################
# every analysis has two parts: an aggregation step and a plotting step
# - aggregation averages over some kind of unit of interest, e.g. trial type
# - and then plotting is making a picture relative to that aggregation
## 1. TRIAL TYPE ANALYSIS
ms <- aggregate(correct ~ t.crit.binned + trialType, d, mean)
ms_i <- aggregate(incorrect ~ t.crit.binned + trialType, d, mean)
qplot(t.crit.binned,correct,
colour=trialType,
geom="line",
data=ms) +
geom_hline(yintercept=.33,lty=2) +
geom_vline(xintercept=0,lty=3) +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-2,3),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
subsample.hz <- 60 # 10 hz is decent, eventually we should set to 30 or 60 hz
d$t.crit.binned <- round(d$t.crit*subsample.hz)/subsample.hz # subsample step
qplot(t.crit.binned,correct,
colour=trialType,
geom="point",
data=ms) +
geom_hline(yintercept=.33,lty=2) +
geom_vline(xintercept=0,lty=3) +
geom_smooth(method="loess",span=.5) +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-2,3),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
subsample.hz <- 60 # 10 hz is decent, eventually we should set to 30 or 60 hz
d$t.crit.binned <- round(d$t.crit*subsample.hz)/subsample.hz # subsample step
qplot(t.crit.binned,correct,
colour=trialType,
geom="point",
data=ms) +
geom_hline(yintercept=.33,lty=2) +
geom_vline(xintercept=0,lty=3) +
geom_smooth(method="loess",span=.5) +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-2,3),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
subsample.hz <- 60 # 10 hz is decent, eventually we should set to 30 or 60 hz
d$t.crit.binned <- round(d$t.crit*subsample.hz)/subsample.hz # subsample step
ms <- aggregate(correct ~ t.crit.binned + trialType, d, mean)
ms_i <- aggregate(incorrect ~ t.crit.binned + trialType, d, mean)
qplot(t.crit.binned,correct,
colour=trialType,
geom="point",
data=ms) +
geom_hline(yintercept=.33,lty=2) +
geom_vline(xintercept=0,lty=3) +
geom_smooth(method="loess",span=.5) +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-2,3),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
subsample.hz <- 5 # 10 hz is decent, eventually we should set to 30 or 60 hz
d$t.crit.binned <- round(d$t.crit*subsample.hz)/subsample.hz # subsample step
################ ANALYSES #################
# every analysis has two parts: an aggregation step and a plotting step
# - aggregation averages over some kind of unit of interest, e.g. trial type
# - and then plotting is making a picture relative to that aggregation
## 1. TRIAL TYPE ANALYSIS
ms <- aggregate(correct ~ t.crit.binned + trialType, d, mean)
ms_i <- aggregate(incorrect ~ t.crit.binned + trialType, d, mean)
qplot(t.crit.binned,incorrect,
colour=trialType,
geom="line",
data=ms_i) +
geom_hline(yintercept=.33,lty=2) +
geom_vline(xintercept=0,lty=3) +
xlab("Time (s)") + ylab("Proportion incorrect looking") +
scale_x_continuous(limits=c(-2,3),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
ms <- aggregate(correct ~ t.crit.binned + trialType + target, d, mean)
qplot(t.crit.binned,correct,
colour=trialType, facets=~target,
geom="line",
data=ms) +
geom_hline(yintercept=.33,lty=2) +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-2,3),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0))
## 3. DWELL TIME IN WINDOW ANALYSIS
# this will look good because we're averaging considerably
window <- c(.5,2.5)
mss <- aggregate(correct ~ trialType + subid,
subset(d,t.crit.binned > window[1] & t.crit.binned < window[2]),
mean)
ms <- aggregate(correct ~ trialType, mss, mean)
ms$cih <- aggregate(correct ~ trialType, mss, ci.high)$correct
ms$cil <- aggregate(correct ~ trialType, mss, ci.low)$correct
qplot(trialType,correct,
fill=trialType, stat="identity",
geom="bar",ylim=c(0,1),
data=ms) +
ylab("Proportion correct looking") +
geom_hline(yintercept=.33,lty=2) +
geom_errorbar(aes(ymin=correct-cil,ymax=correct+cih,width=.2))
qplot(t.crit.binned,correct,
colour=trialType,
geom="point",
data=ms) +
geom_hline(yintercept=.33,lty=2) +
geom_vline(xintercept=0,lty=3) +
geom_smooth(method="loess",span=.5) +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-2,3),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
## 1. TRIAL TYPE ANALYSIS
ms <- aggregate(correct ~ t.crit.binned + trialType, d, mean)
ms_i <- aggregate(incorrect ~ t.crit.binned + trialType, d, mean)
qplot(t.crit.binned,correct,
colour=trialType,
geom="line",
data=ms) +
geom_hline(yintercept=.33,lty=2) +
geom_vline(xintercept=0,lty=3) +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-2,3),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
qplot(t.crit.binned,correct,
colour=trialType,
geom="line",
data=ms) +
geom_hline(yintercept=.33,lty=2) +
geom_hline(yintercept=.5,lty=4) +
geom_vline(xintercept=0,lty=3) +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-2,3),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
head(d)
ms <- aggregate(correct ~ t.crit.binned + trialType + subid, d, mean)
qplot(t.crit.binned,correct,
colour=trialType,
geom="line",
data=ms) +
facet_grid(.~ subid) +
geom_hline(yintercept=.33,lty=2) +
geom_hline(yintercept=.5,lty=4) +
geom_vline(xintercept=0,lty=3) +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-2,3),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
qplot(t.crit.binned,correct,
colour=trialType,
geom="point",
data=ms) +
facet_grid(.~ subid) +
geom_hline(yintercept=.33,lty=2) +
geom_hline(yintercept=.5,lty=4) +
geom_vline(xintercept=0,lty=3) +
geom_smooth() +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-2,3),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
mss <- aggregate(correct ~ t.crit.binned + trialType + subid, d, mean)
ms <- aggregate(correct ~ t.crit.binned + trialType, mss, mean)
ms$cih <- aggregate(correct ~ t.crit.binned + trialType, mss, ci.high)$correct
ms$cil <- aggregate(correct ~ t.crit.binned + trialType, mss, ci.low)$correct
qplot(t.crit.binned,correct,
colour=trialType,
geom="line",
data=ms) +
geom_pointrange(aes(ymin=correct-cil, ymax=correct+cih),
position=position_dodge(.05)) +
geom_hline(yintercept=.33,lty=2) +
geom_vline(xintercept=0,lty=3) +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-2,3),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
window <- c(.5,2.5)
mss <- aggregate(correct ~ trialType + subid,
subset(d,t.crit.binned > window[1] & t.crit.binned < window[2]),
mean)
ms <- aggregate(correct ~ trialType, mss, mean)
ms$cih <- aggregate(correct ~ trialType, mss, ci.high)$correct
ms$cil <- aggregate(correct ~ trialType, mss, ci.low)$correct
qplot(trialType,correct,
fill=trialType, stat="identity",
geom="bar",ylim=c(0,1),
data=ms) +
ylab("Proportion correct looking") +
geom_hline(yintercept=.33,lty=2) +
geom_errorbar(aes(ymin=correct-cil,ymax=correct+cih,width=.2))
qplot(trialType,correct,
fill=trialType, stat="identity",
geom="bar",ylim=c(0,1),
data=mss) +
facet_grid(. ~ subid) +
ylab("Proportion correct looking") +
geom_hline(yintercept=.33,lty=2)
rm(list = ls())
setwd("/Users/ericang/Documents/Erica/Stanford/2013-Q2-Winter/Research/simpimpGIT/Data_analysis/")
source("/Users/ericang/Documents/Erica/Stanford/2013-Q2-Winter/Research/simpimpGIT/Data_analysis/R_scripts/useful.R")
source("/Users/ericang/Documents/Erica/Stanford/2013-Q2-Winter/Research/simpimpGIT/Data_analysis/R_scripts/et_helper.R")
raw.data.path <- "raw_data/"
info.path <- "info/"
processed.data.path <- "processed_data/"
## LOOP TO READ IN FILES
all.data <- data.frame()
files <- dir(raw.data.path,pattern="*.txt")
for (file.name in files) {
print(file.name)
## these are the two functions that are most meaningful
d <- read.smi.idf(paste(raw.data.path,file.name,sep=""),header.rows=35)
d <- preprocess.data(d)
d$subid <- file.name
## now here's where data get bound together
all.data <- rbind(all.data, d)
}
## WRITE DATA OUT TO CSV FOR EASY ACCESS
write.csv(all.data,paste(processed.data.path,
"simpimp_processed.csv",sep=""),
row.names=FALSE)
hist(d$x)
hist(d$y)
hist(d$x)
hist(d$y)
qplot(x,
facets = ~ subid,
geom="histogram",
data=d)
qplot(y,
facets = ~ subid,
geom="histogram",
data=d)
d <- read.csv("/Users/ericang/Documents/Erica/Stanford/2013-Q2-Winter/Research/simpimpGIT/Data_analysis/processed_data/simpimp_processed.csv")
head(d)
hist(d$x)
hist(d$y)
qplot(x,
facets = ~ subid,
geom="histogram",
data=d)
qplot(y,
facets = ~ subid,
geom="histogram",
data=d)
qplot(x,y,data=d, facets=~subid)
qplot(x,y,data=subset(d,stimulus=="140121-ey-simpleImp-list1.032"), facets=~subid)
qplot(x,y,geom="density2d",
data=d,
xlim=c(0,1680),ylim=c(0,1050), facets=~subid)
qplot(x,y,
facets = ~ subid,
geom="density2d",
data=subset(d,stimulus=="140121-ey-simpleImp-list1.032"),
xlim=c(0,1680),
ylim=c(0,1050))
qplot(x,y,
facets = ~ subid,
geom="density2d",
data=subset(d,stimulus=="140121-ey-simpleImp-list1.031"),
xlim=c(0,1680),
ylim=c(0,1050))
```
qplot(x,y,
facets = ~ subid,
geom="density2d",
data=subset(d,stimulus=="140121-ey-simpleImp-list1.028"),
xlim=c(0,1680),
ylim=c(0,1050))
qplot(x,y,
facets = ~ subid,
geom="density2d",
data=subset(d,stimulus=="140121-ey-simpleImp-list1.024"),
xlim=c(0,1680),
ylim=c(0,1050))
qplot(x,y,
facets = ~ subid,
geom="density2d",
data=subset(d,stimulus=="list4.024"),
xlim=c(0,1680),
ylim=c(0,1050))
qplot(x,y,data=subset(d,stimulus=="list4.024"), facets=~subid)
sum(is.na(d$x))
aggregate(x ~ subid, d, function(y) {return(sum(is.na(y)))},
na.action="na.pass")
order <- read.csv("/Users/ericang/Documents/Erica/Stanford/2013-Q2-Winter/Research/simpimpGIT/Data_analysis/info/simpimp_order.csv")
head(order)
nrow(d) # first check number of rows
plot(d$stimulus) # now check the stimulus ordering
d <- join(d, order) # use join rather than merge because it doesn't sort
plot(d$stimulus) # check that nothing got messed up
nrow(d) # check the number of rows again
rois <- list()
rois[[1]] <- c(0,0,840,550) # left
rois[[2]] <- c(840,0,840,550) # right
rois[[3]] <- c(420,550,840,550) # center
names(rois) <- c("L","R","C")
roi.image(rois)
d$roi <- roi.check(d,rois)
qplot(roi,data=d)
d$correct <- d$roi == d$targetPos
d <- subset(d,correct != "NA")
plot(d$stimulus)
rm(list = ls())
setwd("/Users/ericang/Documents/Erica/Stanford/2013-Q2-Winter/Research/simpimpGIT/Data_analysis/")
source("R_scripts/useful.R")
source("R_scripts/et_helper.R")
d <- read.csv("/Users/ericang/Documents/Erica/Stanford/2013-Q2-Winter/Research/simpimpGIT/Data_analysis/processed_data/simpimp_processed.csv")
head(d)
order <- read.csv("/Users/ericang/Documents/Erica/Stanford/2013-Q2-Winter/Research/simpimpGIT/Data_analysis/info/simpimp_order.csv")
head(order)
nrow(d) # first check number of rows
plot(d$stimulus) # now check the stimulus ordering
d <- join(d, order) # use join rather than merge because it doesn't sort
plot(d$stimulus) # check that nothing got messed up
nrow(d) # check the number of rows again
rois <- list()
rois[[1]] <- c(0,0,840,550) # left
rois[[2]] <- c(840,0,840,550) # right
rois[[3]] <- c(420,550,840,550) # center
names(rois) <- c("L","R","C")
roi.image(rois)
d$roi <- roi.check(d,rois)
qplot(roi,data=d)
d$correct <- d$roi == d$targetPos
d <- subset(d,correct != "NA")
plot(d$stimulus)
nrow(d)
qplot(roi,data=d)
d <- rezero.trials(d) # specified in et_helper.R
subsample.hz <- 10 # 10 hz is decent, eventually we should set to 30 or 60 hz
d$t.crit.binned <- round(d$t.crit*subsample.hz)/subsample.hz # subsample step
ms <- aggregate(correct ~ t.crit.binned + trialType, d, mean)
qplot(t.crit.binned,correct,
colour=trialType,
geom="line",
data=ms) +
geom_hline(yintercept=.33,lty=2) +
geom_vline(xintercept=0,lty=3) +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-2,3),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
ms <- aggregate(correct ~ t.crit.binned + trialType + subid, d, mean)
qplot(t.crit.binned,correct,
colour=trialType,
geom="point",
data=ms) +
facet_grid(.~ subid) +
geom_hline(yintercept=.33,lty=2) +
geom_hline(yintercept=.5,lty=4) +
geom_vline(xintercept=0,lty=3) +
geom_smooth() +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-2,3),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
subsample.hz <- 60 # 10 hz is decent, eventually we should set to 30 or 60 hz
d$t.crit.binned <- round(d$t.crit*subsample.hz)/subsample.hz # subsample step
ms <- aggregate(correct ~ t.crit.binned + trialType, d, mean)
ms_i <- aggregate(incorrect ~ t.crit.binned + trialType, d, mean)
qplot(t.crit.binned,correct,
colour=trialType,
geom="point",
data=ms) +
geom_hline(yintercept=.33,lty=2) +
geom_vline(xintercept=0,lty=3) +
geom_smooth(method="loess",span=.5) +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-2,3),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
subsample.hz <- 10 # 10 hz is decent, eventually we should set to 30 or 60 hz
d$t.crit.binned <- round(d$t.crit*subsample.hz)/subsample.hz # subsample step
ms <- aggregate(correct ~ t.crit.binned + trialType, d, mean)
qplot(t.crit.binned,correct,
colour=trialType,
geom="line",
data=ms) +
geom_hline(yintercept=.33,lty=2) +
geom_vline(xintercept=0,lty=3) +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-2,3),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
mss <- aggregate(correct ~ t.crit.binned + trialType + subid, d, mean)
ms <- aggregate(correct ~ t.crit.binned + trialType, mss, mean)
ms$cih <- aggregate(correct ~ t.crit.binned + trialType, mss, ci.high)$correct
ms$cil <- aggregate(correct ~ t.crit.binned + trialType, mss, ci.low)$correct
qplot(t.crit.binned,correct,
colour=trialType,
geom="line",
data=ms) +
geom_pointrange(aes(ymin=correct-cil, ymax=correct+cih),
position=position_dodge(.05)) +
geom_hline(yintercept=.33,lty=2) +
geom_vline(xintercept=0,lty=3) +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-2,3),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
ms <- aggregate(correct ~ t.crit.binned + trialType + target, d, mean)
qplot(t.crit.binned,correct,
colour=trialType, facets=~target,
geom="line",
data=ms) +
geom_hline(yintercept=.33,lty=2) +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-2,3),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0))
window <- c(.5,2.5)
mss <- aggregate(correct ~ trialType + subid,
subset(d,t.crit.binned > window[1] & t.crit.binned < window[2]),
mean)
ms <- aggregate(correct ~ trialType, mss, mean)
ms$cih <- aggregate(correct ~ trialType, mss, ci.high)$correct
ms$cil <- aggregate(correct ~ trialType, mss, ci.low)$correct
qplot(trialType,correct,
fill=trialType, stat="identity",
geom="bar",ylim=c(0,1),
data=ms) +
ylab("Proportion correct looking") +
geom_hline(yintercept=.33,lty=2) +
geom_errorbar(aes(ymin=correct-cil,ymax=correct+cih,width=.2))
## PRELIMINARIES
rm(list = ls())
setwd("/Users/ericang/Documents/Erica/Stanford/2013-Q2-Winter/Research/simpimpGIT/Data_analysis/")
source("/Users/ericang/Documents/Erica/Stanford/2013-Q2-Winter/Research/simpimpGIT/Data_analysis/R_scripts/useful.R")
source("/Users/ericang/Documents/Erica/Stanford/2013-Q2-Winter/Research/simpimpGIT/Data_analysis/R_scripts/et_helper.R")
d <- read.csv("processed_data/simpimp_processed.csv")
head(d)
## minor odds and ends
d <- subset(d,stimulus != "blank") # remove blanks
# got rid of (because the stimulus names are in characters): d$stimulus <- to.n(d$stimulus) # convert to numeric
################ PRELIMINARIES #################
## 1. Read in the orders and merge them with the data
order <- read.csv("info/simpimp_order.csv")
nrow(d) # first check number of rows
plot(d$stimulus) # now check the stimulus ordering
# now join in the orders
d <- join(d, order) # use join rather than merge because it doesn't sort
plot(d$stimulus) # check that nothing got messed up
nrow(d) # check the number of rows again
rois <- list()
rois[[1]] <- c(0,0,840,550) # left
rois[[2]] <- c(840,0,840,550) # right
rois[[3]] <- c(420,550,840,550) # center
names(rois) <- c("L","R","C")
roi.image(rois)
# use check code to make sure that ROIs look right
d$roi <- roi.check(d,rois)
# see how the distribution of ROIs looks
qplot(roi,data=d)
d$correct <- d$roi == d$targetPos
d$incorrect <- d$roi == d$distPos
d <- subset(d,correct != "NA") ## Post-hoc elimination
d <- rezero.trials(d)
subsample.hz <- 5 # 10 hz is decent, eventually we should set to 30 or 60 hz
d$t.crit.binned <- round(d$t.crit*subsample.hz)/subsample.hz # subsample step
ms <- aggregate(correct ~ t.crit.binned + trialType + order, d, mean)
qplot(t.crit.binned,correct,
colour=trialType,
geom="line",
facet_grid=~order,
data=ms) +
geom_hline(yintercept=.33,lty=2) +
geom_hline(yintercept=.5,lty=4) +
geom_vline(xintercept=0,lty=3) +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-2,3),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
subsample.hz <- 5 # 10 hz is decent, eventually we should set to 30 or 60 hz
d$t.crit.binned <- round(d$t.crit*subsample.hz)/subsample.hz # subsample step
ms <- aggregate(correct ~ t.crit.binned + trialType, d, mean)
ms_i <- aggregate(incorrect ~ t.crit.binned + trialType, d, mean)
qplot(t.crit.binned,correct,
colour=trialType,
geom="line",
data=ms) +
geom_hline(yintercept=.33,lty=2) +
geom_hline(yintercept=.5,lty=4) +
geom_vline(xintercept=0,lty=3) +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-2,3),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
ms <- aggregate(correct ~ t.crit.binned + trialType + subid, d, mean)
qplot(t.crit.binned,correct,
colour=trialType,
geom="point",
data=ms) +
facet_grid(.~ subid) +
geom_hline(yintercept=.33,lty=2) +
geom_hline(yintercept=.5,lty=4) +
geom_vline(xintercept=0,lty=3) +
geom_smooth() +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-2,3),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
ms <- aggregate(correct ~ t.crit.binned + trialType + order, d, mean)
qplot(t.crit.binned,correct,
colour=trialType,
geom="point",
data=ms) +
facet_grid(.~ order) +
geom_hline(yintercept=.33,lty=2) +
geom_hline(yintercept=.5,lty=4) +
geom_vline(xintercept=0,lty=3) +
geom_smooth() +
xlab("Time (s)") + ylab("Proportion correct looking") +
scale_x_continuous(limits=c(-2,3),expand = c(0,0)) +
scale_y_continuous(limits=c(0,1),expand = c(0,0)) # make the axes start at 0
